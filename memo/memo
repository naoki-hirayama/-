* 管理画面を実装する。

//* URLは/adminでアクセスできるようにする
//* BASIC認証を設定する前提なので、管理者アカウントや認証機能等を実装する必要はなし。
* 管理画面はjavascriptを使ってちょっとリッチなUIにする。
    * 管理画面はjavascript(jQuery)を使ってちょっとリッチなUIにする。
* ①投稿一覧画面
    //* 表示する項目は「投稿日時」「名前」「本文（色付き）」「レス数」「編集リンク」「詳細リンク」
    //* tableで表示する
    * ページャーを使って30件ずつページング ajax?
    * 上部に検索フォームを表示して「名前」と「本文」で検索できるようにする
    * 「編集リンク」をクリックするとその投稿の編集ウィンドウが表示される
        * ajaxで情報を取得して表示する
        * 編集できる項目は「名前」「本文」「本文色」「画像」
            * 画像は変更と削除両方できるようにする。
            * ユーザーの投稿の場合は「名前」はフォームではなくユーザー名をテキストで表示する
        * バリデーションのエラーメッセージはalertで表示する
        * 編集が完了したら「編集しました」とalertと表示し、編集後の内容で一覧に表示される内容を書き換える。
            * ページの再読み込みはせずDOMの書き換えでやる。
    * 「詳細リンク」をクリックすると投稿詳細画面に遷移する。
* ②投稿詳細画面
    * 上部にその投稿の情報を表示
    * その下に「編集」リンクと「削除」ボタンを設置
        * 編集リンクをクリックすると編集ウィンドウが表示される
            * 投稿一覧画面と同じものでOK
            * ただし、編集が完了した場合はDOM書き換えではなくページ再読み込み
        * 削除はパスワード設定の有無やユーザー設定の有無に関係なく可能
        * confirmで確認メッセージを表示→OKで削除→削除完了画面に遷移する
        * 削除完了画面には「ID〇〇の投稿を削除しました」というメッセージと投稿一覧画面へのリンクを設置する
    * その下には投稿に紐づくレスの一覧を表示する
        * 表示する項目は「投稿日時」「名前」「本文（色付き）」「編集リンク」「削除ボタン」
        * ページャーは不要
        * 投稿一覧と同様にtableを使って表示する
        * 「編集リンク」をクリックするとそのレスの編集ウィンドウが表示される
            * 投稿のやつと同じ仕様
        * 削除ボタンの仕様も投稿と基本的には同じ仕様
            * ただし、削除完了時は投稿編集画面にリダイレクトする

